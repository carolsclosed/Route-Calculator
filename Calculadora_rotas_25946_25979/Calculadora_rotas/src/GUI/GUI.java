/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystlistemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import APPS.AVLTree;
import APPS.ReadCSV;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

import APPS.Calculadora;
import APPS.City;
import APPS.MapaOverlay;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JComboBox;

public class GUI extends javax.swing.JFrame {

    private MapaOverlay overlay;
    private ReadCSV csv;
    private AVLTree avlTree;
    private ArrayList<String> cidades_partida;
    private ArrayList<String> paises_partida;
    private ArrayList<String> cidades_destino;
    private ArrayList<String> paises_destino;
    private City SelectedCityPartida;
    private City SelectedCityDestino;
    private String SelectedCountryPartida;
    private String SelectedCountryDestino;

    /**
     * Creates new form GUI
     */
    public GUI() {
        csv = new ReadCSV();
        csv.writeCitiesByCountry();
        csv.ReadCountryFile("EUROPE");
        avlTree = csv.getAvlTree();

        // Initialize city and country lists
        loadCityAndCountryLists();

        // Initialize GUI components
        initComponents();

    }

    private void loadCityAndCountryLists() {
        ArrayList<City> avl_cities = avlTree.getCities();
        ArrayList<String> cities = new ArrayList<>();
        ArrayList<String> countries = new ArrayList<>();

        countries.add("");
        
        for (City city : avl_cities) {
            cities.add(city.getName());

            // Check if the country is already in the list before adding it
            String country = city.getCountry();
            if (!countries.contains(country)) {
                countries.add(country);
            }
        }

        // Set the lists for cities and countries
        this.cidades_partida = new ArrayList<>(cities);
        this.paises_partida = new ArrayList<>(countries);
        this.cidades_destino = new ArrayList<>(cities);
        this.paises_destino = new ArrayList<>(countries);

        this.SelectedCityPartida = null;
        this.SelectedCityDestino = null;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); // Ensures the JFrame paints properly
        if (overlay != null) {
            overlay.draw(g);

        }

    }

    public void atualizarTexto() {
        Calculadora calc = new Calculadora();
        csv = new ReadCSV();
        csv.ReadCountryFile("EUROPE");

        // Calculate result based on selected cities
        String result = calc.GUI_Response(
                cidadePartida.getSelectedItem().toString(),
                cidadeDestino.getSelectedItem().toString(),
                avlTree
        );

        String[] cities = calc.getCities();
        ArrayList<City> avl_cities = avlTree.getCities();
        ArrayList<City> citiesList = new ArrayList<>();

        for (int i = 0; i < cities.length; i++) {
            String city = cities[i];
            int cityIndex = avlTree.findCityIndex(city);
            citiesList.add(new City(city, avl_cities.get(cityIndex).getLatitude(), avl_cities.get(cityIndex).getLongitude(), ""));
        }

        this.overlay = new MapaOverlay(citiesList);

        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setLineWrap(true);
        jTextArea2.setEditable(false);
        jTextArea2.setText(result);  // Update the text area

        jPanel3.revalidate();        // Revalidate the panel
        jPanel3.repaint();
        this.repaint();              // Repaint the entire GUI
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        cidadePartida = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        cidadeDestino = new javax.swing.JComboBox<>();
        paisPartida = new javax.swing.JComboBox<>();
        paisDestino = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1389, 785));
        setResizable(false);
        setSize(new java.awt.Dimension(1389, 785));
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(93, 6, 234, 86);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(849, 680, 0, 0);

        cidadePartida.setBackground(new java.awt.Color(255, 255, 255));
        cidadePartida.setModel(new javax.swing.DefaultComboBoxModel<>(this.cidades_partida.toArray(new String[0])));
        cidadePartida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cidadePartida.setPreferredSize(new java.awt.Dimension(150, 25));
        cidadePartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadePartidaActionPerformed(evt);
            }
        });
        getContentPane().add(cidadePartida);
        cidadePartida.setBounds(50, 150, 150, 25);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 51, 0)));
        jPanel3.setForeground(new java.awt.Color(255, 204, 153));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(20, 590, 580, 140);

        cidadeDestino.setBackground(new java.awt.Color(255, 255, 255));
        cidadeDestino.setModel(new javax.swing.DefaultComboBoxModel<>(this.cidades_destino.toArray(new String[0])));
        cidadeDestino.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cidadeDestino.setPreferredSize(new java.awt.Dimension(150, 25));
        cidadeDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadeDestinoActionPerformed(evt);
            }
        });
        getContentPane().add(cidadeDestino);
        cidadeDestino.setBounds(430, 150, 150, 25);

        paisPartida.setBackground(new java.awt.Color(255, 255, 255));
        paisPartida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        paisPartida.setPreferredSize(new java.awt.Dimension(150, 25));
        paisPartida.setModel(new javax.swing.DefaultComboBoxModel<>(this.paises_partida.toArray(new String[0])));
        paisPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paisPartidaActionPerformed(evt);
            }
        });
        getContentPane().add(paisPartida);
        paisPartida.setBounds(50, 90, 150, 25);

        paisDestino.setBackground(new java.awt.Color(255, 255, 255));
        paisDestino.setModel(new javax.swing.DefaultComboBoxModel<>(this.paises_destino.toArray(new String[0])));
        paisDestino.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        paisDestino.setPreferredSize(new java.awt.Dimension(150, 25));
        paisDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paisDestinoActionPerformed(evt);
            }
        });
        getContentPane().add(paisDestino);
        paisDestino.setBounds(430, 90, 150, 25);

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 0));
        jLabel1.setText("Cidade de Partida");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 130, 130, 16);

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 51, 0));
        jLabel3.setText("País de Destino");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(430, 70, 130, 16);

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 51, 0));
        jLabel4.setText("País de Partida");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 66, 130, 20);

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 51, 0));
        jLabel2.setText("Cidade de Destino");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(430, 130, 130, 20);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(440, 200, 130, 40);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/wallpaper.jpg.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-3, -4, 640, 760);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/WGS84_Mercator_1-ezgif.com-jpg-to-png-converter.png"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(640, 0, 820, 748);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cidadePartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadePartidaActionPerformed

        String cidadeNome = cidadePartida.getSelectedItem().toString();
        SelectedCityPartida = avlTree.getCities().get(avlTree.findCityIndex(cidadeNome));


    }//GEN-LAST:event_cidadePartidaActionPerformed

    private void cidadeDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeDestinoActionPerformed

        String cidadeNome = cidadeDestino.getSelectedItem().toString();
        SelectedCityDestino = avlTree.getCities().get(avlTree.findCityIndex(cidadeNome));

    }//GEN-LAST:event_cidadeDestinoActionPerformed

    private void paisPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paisPartidaActionPerformed
        updateCitiesByCountry(paisPartida, cidadePartida, this.cidades_partida);
    }//GEN-LAST:event_paisPartidaActionPerformed

    private void paisDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paisDestinoActionPerformed
        updateCitiesByCountry(paisDestino, cidadeDestino, this.cidades_destino);
    }//GEN-LAST:event_paisDestinoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTextArea2.setText("");
        atualizarTexto();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateCitiesByCountry(JComboBox<String> countryComboBox, JComboBox<String> cityComboBox, ArrayList<String> citiesList) {
        String selectedCountry = countryComboBox.getSelectedItem().toString();
        ArrayList<City> citiesByCountry = avlTree.getCitiesByCountry(selectedCountry);

        citiesList.clear();
        for (City city : citiesByCountry) {
            citiesList.add(city.getName());
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(citiesList.toArray(new String[0]));
        cityComboBox.setModel(model);
        cityComboBox.revalidate();
        cityComboBox.repaint();
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        GUI gui = new GUI();
        gui.setVisible(true);
        gui.setDefaultCloseOperation(gui.EXIT_ON_CLOSE);

        Image logo = Toolkit.getDefaultToolkit().getImage("icon.jpg");

        gui.setIconImage(logo);

        gui.setLocationRelativeTo(null);
        gui.setTitle("EuroTrack");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cidadeDestino;
    private javax.swing.JComboBox<String> cidadePartida;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JComboBox<String> paisDestino;
    private javax.swing.JComboBox<String> paisPartida;
    // End of variables declaration//GEN-END:variables
}
